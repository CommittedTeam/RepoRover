index:  423
name:  gatorgrader
commit_hash:  48a4aae1b11d69a6323903abe62185b13e9628f0
commit_subject:  Add a test to ensure that filtering to a single checker works.
isbot:  False
file_paths:  ['tests/test_checkers.py']
num_files:  1
test_files:  1
test_files_ratio:  1.0
unique_file_extensions:  ['.py']
num_unique_file_extensions:  1
num_lines_added:  24
num_lines_removed:  0
num_lines_total:  24


diff of tests/test_checkers.py:
@@ -64,6 +64,7 @@ def test_check_function_verification_separate(commandline_arguments):
         (["--nowelcome", "ListChecks"]),
         (["--checkerdir", "./gator/checks", "ListChecks"]),
         (["--checkerdir", "./gator/checks", "ListChecks", "--namecontains", "Com"]),
+        (["--checkerdir", "./gator/checks", "ListChecks", "--namecontains", "Exec"]),
     ],
 )
 def test_check_function_verification_list(commandline_arguments):
@@ -269,3 +270,26 @@ def test_check_extraction_from_commandline_arguments_has_help_two_checkers_one_i
     assert "CountCommits" in check_helps
     counted_newlines = check_helps.count("\n")
     assert counted_newlines > 0
+
+
+def test_check_extraction_from_commandline_arguments_has_help_single_checker_filtered():
+    """Ensure that checker finding and help extraction works for a single filtered check."""
+    checker = "ListChecks"
+    commandline_arguments = [
+        "--checkerdir",
+        "./gator/checks",
+        "ListChecks",
+        "--namecontains",
+        "Exec",
+    ]
+    gg_arguments, remaining_arguments = arguments.parse(commandline_arguments)
+    args_verified = arguments.verify(gg_arguments)
+    assert args_verified is True
+    found_check = checkers.get_chosen_check(gg_arguments)
+    assert found_check == checker
+    checker_source = checkers.get_source()
+    check_helps = checkers.get_checks_help(checker_source, namecontains="Exec")
+    assert check_helps != ""
+    assert "Exec" in check_helps
+    counted_newlines = check_helps.count("\n")
+    assert counted_newlines > 0
